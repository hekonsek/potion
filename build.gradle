allprojects {
    apply plugin: 'propdeps-idea'
}

subprojects {
    // Maven compatibility
    apply plugin: 'maven'
    group = 'com.github.potion-lib'
    version = '0.0-SNAPSHOT'

    // JVM
    apply plugin: 'scala'

    // Dependencies
    apply plugin: 'propdeps'
    apply plugin: 'propdeps-maven'

    ext {
        camelVersion = '2.12.0'
    }

    dependencies {
        compile 'org.scala-lang:scala-library:2.10.2'
        compile 'org.slf4j:slf4j-api:1.7.5'

        testCompile 'ch.qos.logback:logback-classic:1.0.13'
        testCompile 'com.google.guava:guava:15.0'
        testCompile 'junit:junit:4.11'
        testCompile 'org.mockito:mockito-core:1.9.5'
        testCompile 'org.scalatest:scalatest_2.10:1.9.1'
    }

    repositories {
        mavenCentral()
        mavenLocal()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    }

    // Releasing
    apply plugin: 'signing'
    ext.isReleaseVersion = !version.endsWith("-SNAPSHOT")

    task scaladocJar(type: Jar, dependsOn: scaladoc) {
        classifier = 'javadoc'
        from 'build/docs/scaladoc'
    }

    task sourcesJar(type: Jar) {
        from sourceSets.main.allSource
        classifier = 'sources'
    }

    artifacts {
        archives jar
        archives scaladocJar
        archives sourcesJar
    }

    signing {
        required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
        sign configurations.archives
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signPom(deployment) }

                def snapshotRepo = 'https://oss.sonatype.org/content/repositories/snapshots/'
                def releaseRepo = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
                repository(url: isReleaseVersion ? releaseRepo : snapshotRepo) {
                    authentication(userName: sonatypeUsername, password: sonatypePassword)
                }

                pom.project {
                    name 'potion'
                    packaging 'jar'
                    url 'https://github.com/hekonsek/potion'
                    description 'Banking protocols API for JVM.'

                    scm {
                        url 'scm:git@github.com:hekonsek/potion.git'
                        connection 'scm:git@github.com:hekonsek/potion.git'
                        developerConnection 'scm:git@github.com:hekonsek/potion.git'
                    }

                    developers {
                        developer {
                            id 'hekonsek'
                            name 'Henryk Konsek'
                        }
                    }

                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                }
            }
        }
    }

}

project('potion-camel') {
    dependencies {
        compile project(':potion-core')
        compile "org.apache.camel:camel-core:$camelVersion"

        testCompile "org.apache.camel:camel-scala:$camelVersion"
        testCompile "org.apache.camel:camel-test:$camelVersion"
    }
}

project('potion-microon') {
    dependencies {
        compile project(':potion-core')
        compile project(':potion-camel')
        compile 'com.github.microon:microon-spi-scala:0.1-SNAPSHOT'
        compile "org.apache.camel:camel-scala:$camelVersion"
    }
}

buildscript {
    repositories {
        maven { url 'http://repo.springsource.org/plugins-release' }
    }

    dependencies {
        classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.3'
    }
}